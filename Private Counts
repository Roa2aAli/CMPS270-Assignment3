#include <stdio.h>
#include <time.h>
#include <pthread.h>
#include <stdlib.h>


int array[10];

void* count1s(void* arr) {
    int index = *(int*)arr;
    int count = 0;

    for (int i = 0; i < 5; i++) {
        if (array[i + index] == 1) {
            count++;
        }
    }
    printf("\nlocal number of ones: %d", count);
    free(arr);
}

int main(int argc) {

    printf("the array is : {");
    for (int i = 0; i < 10; i++) {
        array[i] = rand() % 5;
        printf("%d ", array[i]);
    }
    printf("}\n");

    pthread_t th[2];
    clock_t start = clock();
    for (int i = 0; i < 2; i++) {
        int* a = malloc(sizeof(int));
        *a = i * 5;
        pthread_create(&th[i], NULL, &count1s, a);
    }

    for (int i = 0; i < 2; i++) {
        pthread_join(th[i], NULL);
    }

    clock_t end = clock();
    double time = ((double)end - start) / CLOCKS_PER_SEC;
    printf("\nTime taken by thread : %f", time);

    return 0;
}
